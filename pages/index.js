import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";

import classNames from "classnames";

import rehypeSlug from "rehype-slug";

import fs from "fs";

import ReactMarkdown from "react-markdown";
import GithubSlugger from "github-slugger";

export default function Home({ markdown }) {
  const Heading = ({ level, children }) => {
    const Tag = `h${level}`;
    const slug = new GithubSlugger().slug(children[0]);

    return (
      <Tag className="flex items-center space-x-1 group">
        <div className="opacity-0 group-hover:opacity-100 float-left -ml-5">
          <a href={"#" + slug}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              fill="currentColor"
              viewBox="0 0 16 16"
            >
              <path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" />
              <path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" />
            </svg>
          </a>
        </div>
        <div id={slug} className="">
          {children}
        </div>
      </Tag>
    );
  };

  return (
    <div className="">
      <Head>
        <title>Developer Handbook</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto py-10 prose lg:prose-xl">
        <ReactMarkdown
          rehypePlugins={[rehypeSlug]}
          components={{
            h2: Heading,
            h3: Heading,
            h4: Heading,
            h5: Heading,
            h6: Heading,
          }}
        >
          {markdown}
        </ReactMarkdown>
      </div>
    </div>
  );
}

export async function getStaticProps() {
  const markdown = await fs.readFileSync("./handbook.md").toString("utf-8");

  return {
    props: {
      markdown,
    },
  };
}
